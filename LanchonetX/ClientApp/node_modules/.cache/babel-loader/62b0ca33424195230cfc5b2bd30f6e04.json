{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\Web\\\\WebValdirReact\\\\ClientApp\\\\src\\\\components\\\\FetchProduto.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nexport class FetchProduto extends Component {\n  constructor() {\n    super();\n    this.state = {\n      produtos: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populaProdutoData();\n  }\n\n  static handleEdit(id) {\n    window.location.href = \"/produto/edit/\" + id;\n  }\n\n  static handleDelete(id) {\n    if (!window.confirm(\"Você deseja deletar o produto : \" + id)) {\n      return;\n    } else {\n      fetch('api/produtos/' + id, {\n        method: 'delete'\n      }).then(json => {\n        window.location.href = \"fetch-produto\";\n        alert('Deletado com Sucesso!');\n      });\n    }\n  }\n\n  static renderProdutosTabela(produtos) {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"C\\xF3digo\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"A\\xE7\\xF5es\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, produtos.map(prod => /*#__PURE__*/React.createElement(\"tr\", {\n      key: prod.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, prod.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, prod.descricao), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: id => this.handleEdit(prod.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, \"Edit\"), \" \\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: id => this.handleDelete(prod.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 35\n      }\n    }, \"Delete\"))))));\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }\n    }, \" Carregando... \"), \" \") : FetchProduto.renderProdutosTabela(this.state.produtos);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Produtos\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Tela de Listagem de Produtos\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/add-produto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Cadastrar Produto\")), contents);\n  }\n\n  async populaProdutoData() {\n    const response = await fetch('api/Produtos');\n    const data = await response.json();\n    this.setState({\n      produtos: data,\n      loading: false\n    });\n  }\n\n}\nFetchProduto.displayName = \"Produtos\";","map":{"version":3,"sources":["C:/Users/bruno/Desktop/Web/WebValdirReact/ClientApp/src/components/FetchProduto.js"],"names":["React","Component","Link","FetchProduto","constructor","state","produtos","loading","componentDidMount","populaProdutoData","handleEdit","id","window","location","href","handleDelete","confirm","fetch","method","then","json","alert","renderProdutosTabela","map","prod","descricao","render","contents","response","data","setState","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class FetchProduto extends Component {\r\n    static displayName = \"Produtos\";\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { produtos: [], loading: true }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populaProdutoData();\r\n    }\r\n\r\n    static handleEdit(id) {\r\n        window.location.href = \"/produto/edit/\" + id;\r\n    }\r\n\r\n    static handleDelete(id) {\r\n        if (!window.confirm(\"Você deseja deletar o produto : \" + id)) {\r\n            return;\r\n        }\r\n        else {\r\n            fetch('api/produtos/' + id, { method: 'delete' })\r\n                .then(json => {\r\n                    window.location.href = \"fetch-produto\";\r\n                    alert('Deletado com Sucesso!');\r\n                })\r\n        }\r\n    }\r\n\r\n    static renderProdutosTabela(produtos) {\r\n\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Código</th>\r\n                        <th>Descrição</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {produtos.map(prod =>\r\n                        <tr key={prod.id}>\r\n                            <td>{prod.id}</td>\r\n                            <td>{prod.descricao}</td>\r\n\r\n                            <td>\r\n                                <button className=\"btn btn-success\" onClick={(id) => this.handleEdit(prod.id)}>Edit</button> &nbsp;\r\n                                  <button className=\"btn btn-danger\" onClick={(id) => this.handleDelete(prod.id)}>Delete</button>\r\n                            </td>\r\n\r\n                        </tr>\r\n\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em> Carregando... </em> </p>\r\n            : FetchProduto.renderProdutosTabela(this.state.produtos);\r\n\r\n        return (\r\n            <div>\r\n                <h1 id=\"tabelLabel\" >Produtos</h1>\r\n                <p>Tela de Listagem de Produtos</p>\r\n                <p>\r\n                    <Link to=\"/add-produto\">Cadastrar Produto</Link>\r\n                </p>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    async populaProdutoData() {\r\n        const response = await fetch('api/Produtos');\r\n        const data = await response.json();\r\n        this.setState({ produtos: data, loading: false });\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}