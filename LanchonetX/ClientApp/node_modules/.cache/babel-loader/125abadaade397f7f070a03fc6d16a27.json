{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\Web\\\\LanchonetX\\\\ClientApp\\\\src\\\\components\\\\FetchIngrediente.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nexport class FetchIngrediente extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientes: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populaIngredientesData();\n  }\n\n  static handleEdit(id) {\n    window.location.href = \"/ingrediente/edit/\" + id;\n  }\n\n  static handleDelete(id) {\n    if (!window.confirm(\"Você deseja deletar o Ingrediente : \" + id + \"?\")) {\n      return;\n    } else {\n      fetch('api/Ingrediente/' + id, {\n        method: 'delete'\n      }).then(json => {\n        window.location.href = \"fetch-ingrediente\";\n        alert('Deletado com Sucesso!');\n      });\n    }\n  }\n\n  static renderIngredientesTabela(ingredientes) {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Valor R$\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, ingredientes.map(ingr => /*#__PURE__*/React.createElement(\"tr\", {\n      key: ingr.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, ingr.nome), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, ingr.valor), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: id => this.handleEdit(ingr.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, \"Edit\"), \" \\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: id => this.handleDelete(ingr.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, \"Delete\"))))));\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }\n    }, \" Carregando... \"), \" \") : FetchIngrediente.renderIngredientesTabela(this.state.ingredientes);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Tela de Listagem de Ingredientes\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/add-ingrediente\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Cadastrar Ingrediente\")), contents);\n  }\n\n  async populaIngredientesData() {\n    const response = await fetch('api/Ingrediente');\n    const data = await response.json();\n    this.setState({\n      ingredientes: data,\n      loading: false\n    });\n  }\n\n}\nFetchIngrediente.displayName = \"Ingrediente\";","map":{"version":3,"sources":["C:/Users/bruno/Desktop/Web/LanchonetX/ClientApp/src/components/FetchIngrediente.js"],"names":["React","Component","Link","FetchIngrediente","constructor","state","ingredientes","loading","componentDidMount","populaIngredientesData","handleEdit","id","window","location","href","handleDelete","confirm","fetch","method","then","json","alert","renderIngredientesTabela","map","ingr","nome","valor","render","contents","response","data","setState","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class FetchIngrediente extends Component {\r\n    static displayName = \"Ingrediente\";\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { ingredientes: [], loading: true }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populaIngredientesData();\r\n    }\r\n\r\n    static handleEdit(id) {\r\n        window.location.href = \"/ingrediente/edit/\" + id;\r\n    }\r\n\r\n    static handleDelete(id) {\r\n        if (!window.confirm(\"Você deseja deletar o Ingrediente : \" + id + \"?\")) {\r\n            return;\r\n        }\r\n        else {\r\n            fetch('api/Ingrediente/' + id, { method: 'delete' })\r\n                .then(json => {\r\n                    window.location.href = \"fetch-ingrediente\";\r\n                    alert('Deletado com Sucesso!');\r\n                })\r\n        }\r\n    }\r\n\r\n    static renderIngredientesTabela(ingredientes) {\r\n\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\" >\r\n                <thead>\r\n                    <tr>                       \r\n                        <th>Nome</th>\r\n                        <th>Valor R$</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ingredientes.map(ingr =>\r\n                        <tr key={ingr.id}>                           \r\n                            <td>{ingr.nome}</td>\r\n                            <td>{ingr.valor}</td>\r\n                            <td>\r\n                                <button className=\"btn btn-success\" onClick={(id) => this.handleEdit(ingr.id)}>Edit</button> &nbsp;\r\n                                <button className=\"btn btn-danger\" onClick={(id) => this.handleDelete(ingr.id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em> Carregando... </em> </p>\r\n            : FetchIngrediente.renderIngredientesTabela(this.state.ingredientes);\r\n\r\n        return (\r\n            <div>\r\n                <h1 id=\"tabelLabel\" >Ingredientes</h1>\r\n                <p>Tela de Listagem de Ingredientes</p>\r\n                <p>\r\n                    <Link to=\"/add-ingrediente\">Cadastrar Ingrediente</Link>\r\n                </p>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    async populaIngredientesData() {\r\n        const response = await fetch('api/Ingrediente');\r\n        const data = await response.json();\r\n        this.setState({ ingredientes: data, loading: false });\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}